{"ast":null,"code":"import { createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-ef68022e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_createStaticVNode(\"<div class=\\\"form-group\\\" data-v-ef68022e><label for=\\\"exampleInputEmail1\\\" data-v-ef68022e>Email</label><input type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"exampleInputEmail1\\\" aria-describedby=\\\"emailHelp\\\" placeholder=\\\"Inserisci la tua email\\\" data-v-ef68022e><small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\" data-v-ef68022e>We&#39;ll never share your email with anyone else.</small></div><div class=\\\"form-group\\\" data-v-ef68022e><label for=\\\"exampleInputPassword1\\\" data-v-ef68022e>Password</label><input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"exampleInputPassword1\\\" placeholder=\\\"Password\\\" data-v-ef68022e></div><button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" data-v-ef68022e>Login</button>\", 3);\nconst _hoisted_4 = {\n  class: \"mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(\"form\", null, [_hoisted_1, _createElementVNode(\"p\", _hoisted_4, [_createTextVNode(\"Non hai ancora un account? \"), _createVNode(_component_router_link, {\n    to: {\n      name: 'Registrazione'\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"Registrati\")]),\n    _: 1 /* STABLE */\n  })])]);\n}","map":{"version":3,"names":["_createStaticVNode","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_4","_createTextVNode","_createVNode","_component_router_link","to","name","default","_withCtx","_"],"sources":["/Users/giogav/Desktop/boatify/boatify-project/frontend/src/components/Login.vue"],"sourcesContent":["<template>\n<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Inserisci la tua email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  <p class=\"mt-3\">Non hai ancora un account? \n      <router-link :to=\"{ name: 'Registrazione' }\">Registrati</router-link>\n    </p>\n</form>\n</template>\n\n<script>\nimport { config } from \"@/config\";\nimport { defineComponent } from \"vue\";\nimport store from '@/store/index'\nimport router from '@/router';\n\nexport default defineComponent({\n    name: \"LoginForm\",\n    data() {\n        return {\n            user: {\n                email: \"\",\n                password: \"\"\n            },\n            error: {\n                status: false,\n                message: \"default message\"\n            }\n        }\n\n    },\n    methods: {\n        async login() {\n            //console.log(\"request received\")\n            const opzioniRichiesta = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(this.user)\n            }\n            //console.log(opzioniRichiesta.body);\n            try {\n                const res = await fetch(`/api/${config.API_VERSION}/auth/loginUtente`, opzioniRichiesta);\n                const data = await res.json();\n\n                if (data.success) {\n                    //console.log('user logged in ' + data.nome)\n                    store.commit('setToken', { user: data.nome, email: data.email, token: data.token })\n                    router.push({ name: \"DashBoard\" })\n                }\n\n                else {\n                    //console.log(\"something went wrong\")\n                    this.error.status = true;\n                    this.error.message = data?.error || data?.message || \"Unexpected error\"\n                    console.error(this.error.message)\n                }\n            } catch (error) {\n                this.error.status = true;\n                this.error.message = error || \"Errore inaspettato\"\n            }\n        }\n    }\n})\n</script>\n<style scoped>\n.custom {\n    background-image: url(\"../images/sfondo.webp\");\n    background-size: cover;\n    background-position: center;\n    resize: both;\n}\n\n.ch {\n    min-height: 90vh;\n}\n</style>\n"],"mappings":";;gCAAAA,kBAAA;;EAYKC,KAAK,EAAC;AAAM;;;uBAXjBC,mBAAA,CAcO,eAbLC,UAIM,EAMNC,mBAAA,CAEM,KAFNC,UAEM,GAdRC,gBAAA,CAYkB,6BACZ,GAAAC,YAAA,CAAqEC,sBAAA;IAAvDC,EAAE,EAAE;MAAAC,IAAA;IAAA;EAAyB;IAbjDC,OAAA,EAAAC,QAAA,CAamD,MAAU,CAb7DN,gBAAA,CAamD,YAAU,E;IAb7DO,CAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}