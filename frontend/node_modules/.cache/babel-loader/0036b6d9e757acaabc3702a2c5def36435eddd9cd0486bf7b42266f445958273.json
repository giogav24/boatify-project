{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { config } from \"@/config\";\nimport { defineComponent } from \"vue\";\nimport store from '@/store/index';\nimport router from '@/router';\nexport default defineComponent({\n  name: \"LoginForm\",\n  data() {\n    return {\n      user: {\n        email: \"\",\n        password: \"\"\n      },\n      error: {\n        status: false,\n        message: \"default message\"\n      }\n    };\n  },\n  methods: {\n    async login() {\n      //console.log(\"request received\")\n      const opzioniRichiesta = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(this.user)\n      };\n      //console.log(opzioniRichiesta.body);\n      try {\n        const res = await fetch(`/api/${config.API_VERSION}/auth/loginUtente`, opzioniRichiesta);\n        const data = await res.json();\n        if (data.success) {\n          //console.log('user logged in ' + data.nome)\n          store.commit('setToken', {\n            user: data.nome,\n            email: data.email,\n            token: data.token\n          });\n          router.push({\n            name: \"DashBoard\"\n          });\n        } else {\n          //console.log(\"something went wrong\")\n          this.error.status = true;\n          this.error.message = data?.error || data?.message || \"Unexpected error\";\n          console.error(this.error.message);\n        }\n      } catch (error) {\n        this.error.status = true;\n        this.error.message = error || \"Errore inaspettato\";\n      }\n    }\n  }\n});","map":{"version":3,"names":["config","defineComponent","store","router","name","data","user","email","password","error","status","message","methods","login","opzioniRichiesta","method","headers","body","JSON","stringify","res","fetch","API_VERSION","json","success","commit","nome","token","push","console"],"sources":["/Users/giogav/Desktop/boatify/boatify-project/frontend/src/components/Login.vue"],"sourcesContent":["<template>\n<form>\n  <div class=\"form-group\">\n    <label for=\"exampleInputEmail1\">Email</label>\n    <input type=\"email\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Inserisci la tua email\">\n    <small id=\"emailHelp\" class=\"form-text text-muted\">We'll never share your email with anyone else.</small>\n  </div>\n  <div class=\"form-group\">\n    <label for=\"exampleInputPassword1\">Password</label>\n    <input type=\"password\" class=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\">\n  </div>\n  <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  <p class=\"mt-3\">Non hai ancora un account? \n      <router-link :to=\"{ name: 'Registrazione' }\">Registrati</router-link>\n    </p>\n</form>\n</template>\n\n<script>\nimport { config } from \"@/config\";\nimport { defineComponent } from \"vue\";\nimport store from '@/store/index'\nimport router from '@/router';\n\nexport default defineComponent({\n    name: \"LoginForm\",\n    data() {\n        return {\n            user: {\n                email: \"\",\n                password: \"\"\n            },\n            error: {\n                status: false,\n                message: \"default message\"\n            }\n        }\n\n    },\n    methods: {\n        async login() {\n            //console.log(\"request received\")\n            const opzioniRichiesta = {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify(this.user)\n            }\n            //console.log(opzioniRichiesta.body);\n            try {\n                const res = await fetch(`/api/${config.API_VERSION}/auth/loginUtente`, opzioniRichiesta);\n                const data = await res.json();\n\n                if (data.success) {\n                    //console.log('user logged in ' + data.nome)\n                    store.commit('setToken', { user: data.nome, email: data.email, token: data.token })\n                    router.push({ name: \"DashBoard\" })\n                }\n\n                else {\n                    //console.log(\"something went wrong\")\n                    this.error.status = true;\n                    this.error.message = data?.error || data?.message || \"Unexpected error\"\n                    console.error(this.error.message)\n                }\n            } catch (error) {\n                this.error.status = true;\n                this.error.message = error || \"Errore inaspettato\"\n            }\n        }\n    }\n})\n</script>\n<style scoped>\n.custom {\n    background-image: url(\"../images/sfondo.webp\");\n    background-size: cover;\n    background-position: center;\n    resize: both;\n}\n\n.ch {\n    min-height: 90vh;\n}\n</style>\n"],"mappings":";AAmBA,SAASA,MAAK,QAAS,UAAU;AACjC,SAASC,eAAc,QAAS,KAAK;AACrC,OAAOC,KAAI,MAAO,eAAc;AAChC,OAAOC,MAAK,MAAO,UAAU;AAE7B,eAAeF,eAAe,CAAC;EAC3BG,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,IAAI,EAAE;QACFC,KAAK,EAAE,EAAE;QACTC,QAAQ,EAAE;MACd,CAAC;MACDC,KAAK,EAAE;QACHC,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;MACb;IACJ;EAEJ,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,KAAKA,CAAA,EAAG;MACV;MACA,MAAMC,gBAAe,GAAI;QACrBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACb,IAAI;MAClC;MACA;MACA,IAAI;QACA,MAAMc,GAAE,GAAI,MAAMC,KAAK,CAAE,QAAOrB,MAAM,CAACsB,WAAY,mBAAkB,EAAER,gBAAgB,CAAC;QACxF,MAAMT,IAAG,GAAI,MAAMe,GAAG,CAACG,IAAI,CAAC,CAAC;QAE7B,IAAIlB,IAAI,CAACmB,OAAO,EAAE;UACd;UACAtB,KAAK,CAACuB,MAAM,CAAC,UAAU,EAAE;YAAEnB,IAAI,EAAED,IAAI,CAACqB,IAAI;YAAEnB,KAAK,EAAEF,IAAI,CAACE,KAAK;YAAEoB,KAAK,EAAEtB,IAAI,CAACsB;UAAM,CAAC;UAClFxB,MAAM,CAACyB,IAAI,CAAC;YAAExB,IAAI,EAAE;UAAY,CAAC;QACrC,OAEK;UACD;UACA,IAAI,CAACK,KAAK,CAACC,MAAK,GAAI,IAAI;UACxB,IAAI,CAACD,KAAK,CAACE,OAAM,GAAIN,IAAI,EAAEI,KAAI,IAAKJ,IAAI,EAAEM,OAAM,IAAK,kBAAiB;UACtEkB,OAAO,CAACpB,KAAK,CAAC,IAAI,CAACA,KAAK,CAACE,OAAO;QACpC;MACJ,EAAE,OAAOF,KAAK,EAAE;QACZ,IAAI,CAACA,KAAK,CAACC,MAAK,GAAI,IAAI;QACxB,IAAI,CAACD,KAAK,CAACE,OAAM,GAAIF,KAAI,IAAK,oBAAmB;MACrD;IACJ;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}